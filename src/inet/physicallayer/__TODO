Change the physical layer to support the following:
 - separate transmission/reception start and transmission/reception end
 - mobility state changes during transmission, propagation and reception
 - aborting an ongoing transmission
 - capturing a reception while receiving another
 - better energy detection and clear channel assessment
 - preamble/pilot detection, separate synchronization phase
 - carrier/signal loss detection during reception

Transmitter:
 - the past of a transmission is always certain and never change
 - the future of a transmission is always uncertain and may change at any time
 - the transmitter notifies the medium about changes in the future of a transmission as soon as they become known
 - the first notification regarding a transmission happens at the start of the transmission
 - the last notification regarding a transmission happens at the last change in the future of the transmission
 - if there are no changes in the future of a transmission, then there's only one notification when it starts
 - this scheme allows optimistic concurrent and parallel computation with cache invalidation upon changes
 - for example, the transmitter notifies the medium about *unforeseen*:
   - abort of a transmission (e.g. a power failure)
   - transmission power change (e.g. to overcome interfering noise)
   - space-time coordinate change (e.g. a mobility state change)
 - the transmitter may have internal state changes independently of the above to allow processing at important points in the actual transmission process, for example:
   - the start/end of pilot/preamble transmission
   - the start/end of data transmission
 - the transmitter doesn't notify the medium about state changes if the future of the current transmission is not affected

Medium:
 - the transmission change notification is a function call on the medium by the transmitter
 - the medium propagates all transmission change notifications to all affected receivers 
 - the medium converts transmission change notifications into reception change notifications
 - the medium delays reception change notifications according to the propagation delay between the transmitter and the receiver
 - the reception change notification is a message sent to the receiver by the medium
 - the future of a transmission determines the future of a reception
 - as time goes by the future of a transmission and a reception becomes the certain past

Receiver:
 - the past of a reception is always certain and never change
 - the future of a reception is always uncertain and may change at any time
 - the medium notifies the receiver about changes in the future of a reception as soon as they become known
 - the first notification regarding a reception happens at the start of the reception
 - the last notification regarding a reception happens at the last change in the future of the reception
 - if there are no changes in the future of a reception, then there's only one notification when it starts
 - this scheme allows optimistic concurrent and parallel computation with cache invalidation upon changes
 - for example, the medium notifies the receiver about *unforeseen*:
   - abort of a reception (e.g. a power failure)
   - reception power change (e.g. to overcome interfering noise)
   - space-time coordinate change (e.g. a mobility state change)
 - the medium doesn't notify the receiver about state changes if the future of the current reception is not affected
 - the receiver may have internal state changes independently of the above to allow processing at important points in the actual reception process, for example:
   - the start/end of clear channel assessment
   - the start/end of pilot/preamble synchronization
   - the start/end of data reception

Other:
 - rename speed to velocity (speed is scalar)
 - rename loss to gain?
 - consider renaming sensitivity to minReceptionPower, or some other unification
 - consider generalizing the implementation from radio to radio/cable physical layer with naming, directories etc.
 - create a new interface for stream like transmitters/receivers (transmissionStart, transmissionEnd, receptionStart, receptionEnd)
 - extend receiver interface to allow a separate decision for the detection of preambles during synchronization
 - provide capture during reception (switching to another transmission)
 - remove those interfaces which are unlikely to have multiple different implementations
 - we don't know the end position at the time of the transmission begin, we can only have a guess
   should we separate transmission begin and end? or should it be an approximation only?
 - using random numbers during computing the radio signal reception decisision is fundamentally wrong because the computation is not purely functional anymore and thus prevents deterministic concurrent parallel computing (because the order of random number generation matters)
   to solve this issue we might use multiple random number generators (one for each worker) and/or request receivers to provide an upper limit for the count of random numbers needed to be able to deterministically provide them   

Scratchpad
==========

packet domain:
 - part of MAC

bit domain:
 - cyclic redundancy check insertion/removal (CRC)
 - forward error correction coding/encoding (FEC)
 - bit interleaving/deinterleaving

symbol domain:
 - modulation/demodulation
 - pilot/preamble insertion/removal
 - spreading/despreading
 - antenna beamforming
 - space-time coding/decoding
 - spatial multiplexing/demultiplexing

sample or waveform domain:
 - pulse shaping/matching filter
 - carrier sensing/energy detection
 - synchronization/pll

analog domain:
 - DA/AD conversion
 - IF up/down conversion
 - PLL

model:
 - mobility (position)
 - antenna (mobility)
 - propagation (speed)
 - attenuation (free space: alpha)
 - background noise (isotropic: power)
 - radio (receiver antenna, transmitter antenna, codec, modem, shaper, converter)
 - radio medium (propagation, attenuation, background noise, radios, transmissions)
 - listening (??? filter model)
 - transmission (start position/time, end position/time, analog model)
 - reception (transmission, start position/time, end position/time, analog model)
 - noise (start position/time, end position/time, analog model)
 - loss (factor)
 - codec (coding scheme, header bit length, header bit rate, payload bit rate)
 - modem (modulation scheme, preamble symbol length)
 - shaper (?)
 - converter (power, carrier frequency, bandwidth)

transmission:
 - packet model (length, bits)
 - bit model (crc, fec, header bit length, total length, bits)
 - symbol model (modulation, preamble symbol length, total length, symbols)
 - sample model (pulse shape, length, samples)
 - analog model (power, duration, carrier frequency, bandwidth)

reception:
 - analog model indication (snir)
 - sample model indication (rssi)
 - symbol model indication (symbol error rate, symbol error count)
 - bit model indication (bit error rate, bit error count)
 - packet model indication (packet error rate, packet successful)

algorithms:
 - compute CRC
 - check CRC
 - FEC encode
 - FEC decode
 - Modulate
 - Demodulate
 - Shape pulse
 - Filter pulse
 - insert preamble/pilot
 - synchronize

missing:
 - doppler shift
 - polarization
 - preamble/pilot/sychronization
 - mimo, antenna gain
